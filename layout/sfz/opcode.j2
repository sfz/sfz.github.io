{#-
	Gets the opcode information details from the database by passing the opcode name,
	which can be specified in the frontmatter with the variable `opcode_name`,
	otherwise automatically from the opcode' document filename.

	The filename option is OK only for opcodes without aliases and/or modulations,
	otherwise we need also the original opcode info,
	so this is not an option in the latter case.
-#}
{%-extends "base.j2" %}

{%-set opcode_name = page.meta.opcode_name %}
{%-if not opcode_name %}
	{%-set opcode_name = page.file.name %}
{%-endif %}

{%-block title %}
	{%-if page.meta and page.meta.title %}
		<title>{{ page.meta.title }} - {{ config.site_name }}</title>
	{%-else %}
		<title>{{ page.file.name }} - {{ config.site_name }}</title>
	{%-endif %}
{%-endblock %}

{%-set opcode          = find_opcode(opcode_name) %}
{%-set info            = get_info(opcode) %}
{%-set range_title     = "Range" %}
{%-set option_versions = [opcode.version] %}

{%-if opcode.value and opcode.value.options %}
	{%-set range_title = "Options" %}
	{%-for option in opcode.value.options %}
		{%-if option.version and not option.version in option_versions %}
			{%-do option_versions.append(option.version) %}
		{%-endif %}
	{%-endfor %}
{%-endif %}

{%-block title_header %}
	{%-if not page.meta.no_title_header %}
		{%-if page.meta.title %}
			<h1>{{ page.meta.title }}</h1>
		{%-else %}
			<h1>{{ opcode_name }}</h1>
		{%-endif %}
	{%-endif %}
{%-endblock %}

{%-block content %}
<p>{{ opcode.short_description }}</p>
{{-page.content }}

<table class="table table-sm table-bordered table-hover table-striped table-responsive-xl">
	<thead class="table-dark">
		<tr>
			<th scope="col">Name</th>
			<th scope="col">Version</th>
			<th scope="col">Type</th>
			<th scope="col">Default</th>
			<th scope="col">{{ range_title }}</th>
			<th scope="col">Unit</th>
		</tr>
	</thead>
	<tbody>
{%-if opcode.value and opcode.value.options %}
	{%-set temp = namespace(version = "") %}
	{%-for option_version in option_versions %}
		{%-set options_string_list = [] %}
		{%-for option in opcode.value.options %}
			{%-if option.version %}
				{%-set temp.version = option.version %}
			{%-else %}
				{%-set temp.version = info.version %}
			{%-endif %}
			{%-if temp.version == option_version %}
				{%-do options_string_list.append(option.name) %}
			{%-endif %}
		{%-endfor %}
		{%-if loop.first %}
		<tr>
			<td>{{ info.name          }}</td>
			<td>{{ info.version       }}</td>
			<td>{{ info.value_type    }}</td>
			<td>{{ info.value_default }}</td>
			<td>{{ options_string_list|join(', ') }}</td>
		</tr>
		{%-else %}
		<tr>
			<td></td>
			<td>{{ option_version }}</td>
			<td></td>
			<td></td>
			<td>{{ options_string_list|join(', ') }}</td>
		</tr>
		{%-endif %}
	{%-endfor %}
{%-else %}
		<tr>
			<td>{{ info.name          }}</td>
			<td>{{ info.version       }}</td>
			<td>{{ info.value_type    }}</td>
			<td>{{ info.value_default }}</td>
			<td>{{ info.value_range   }}</td>
			<td>{{ info.value_unit    }}</td>
		</tr>
{%-endif %}
{%-if opcode.modulation and	(opcode.modulation.midi_cc or opcode.modulation.velocity) %}
		<thead class="table-dark">
			<tr>
				<th colspan="6">Modulations</th>
			</tr>
		</thead>
		<tbody>
	{%-for midi_cc in opcode.modulation.midi_cc %}
		{%-set info = get_info(midi_cc) %}
			<tr>
				<td>{{ info.name          }}</td>
				<td>{{ info.version       }}</td>
				<td>{{ info.value_type    }}</td>
				<td>{{ info.value_default }}</td>
				<td>{{ info.value_range   }}</td>
				<td>{{ info.value_unit    }}</td>
			</tr>
	{%-endfor %}
	{%-for velocity in opcode.modulation.velocity %}
		{%-set info = get_info(velocity) %}
			<tr>
				<td>{{ info.name          }}</td>
				<td>{{ info.version       }}</td>
				<td>{{ info.value_type    }}</td>
				<td>{{ info.value_default }}</td>
				<td>{{ info.value_range   }}</td>
				<td>{{ info.value_unit    }}</td>
			</tr>
	{%-endfor %}
		</tbody>
{%-endif %}
	<tbody>
</table>

{%-if opcode.modulation and (opcode.modulation.envelope or opcode.modulation.lfo) %}
<h2>Other modulations</h2>
	{%-set envelope = opcode.modulation.envelope %}
	{%-set lfo      = opcode.modulation.lfo %}
	{%-if envelope is none  %}
		{%-set envelope = 'X' %}
	{%-endif %}
	{%-if lfo is none %}
		{%-set lfo = 'X' %}
	{%-endif %}
<ul>
	<li>Envelope: {{ envelope }}</li>
	<li>LFO: {{ lfo }}</li>
</ul>
{%-endif %}

{%-set see_also       = load_yaml(config.extra.db.sfz.see_also) %}
{%-set see_also_dict  = see_also|selectattr("name", "equalto", opcode.name)|list|first or '' %}
{%-set see_also_pages = see_also_dict.pages %}

{%-if see_also_pages|count %}
	{%-set see_also_list = [] %}
	{%-for page in see_also_pages %}
		{%-if page.url is not none %}
			{%-set page_url = page.url %}
		{%-else %}
			{%-set page_url = page.name %}
		{%-endif %}
		{%-do see_also_list.append('<a href="' ~ page_url ~ '">' ~ page.name ~ '</a>') %}
	{%-endfor %}
	<p>See also: {{ see_also_list|join(", ") }}</p>
{%-endif %}

{%-set as_type      = true %}
{%-set category_url = get_category_url(opcode_name) %}
{%-set type_url     = get_category_url(opcode_name, as_type) %}

{%-if category_url %}
	<p>Category: {{ category_url-}}{%-if type_url %}, {{ type_url }}{%-endif %}</p>
{%-endif %}

{%-endblock %} {# content #}
